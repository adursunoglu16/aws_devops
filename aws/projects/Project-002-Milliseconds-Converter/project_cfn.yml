
AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template will create Application Load Balancer with ASG using LT. This is a Milliseconds Converter
  Application aims to convert the given time in milliseconds into hours, minutes, and seconds. The application
  is to be coded in Python and deployed as a web application with Flask on AWS Application Load Balancer
  with Auto Scaling Group of Elastic Compute Cloud (EC2) Instances using AWS Cloudformation Service.

Parameters:
  MyVPC:
    Description: VpcId of your existing Virtual Private Cloud(VPC)
    Type: AWS::EC2::VPC::Id

  MySubnets:
    Description: The list of SubnetIds in your VPC
    Type: List<AWS::EC2::Subnet::Id>

  MyInstanceType:
    Description: Select the instance type for your web server EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t1.micro
      - m1.small
      - m1.medium
      - m1.large
    ConstraintDescription: must be a valid EC2 instance.
   
  MyKeyName:
    Description: Select your key pair from the list
    Type: AWS::EC2::KeyPair::KeyName


Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0742b4e673072066f
    us-east-2:
      AMI: ami-05d72852800cbf29e
    us-west-1:
      AMI: ami-0577b787189839998
    us-west-2:
      AMI: ami-0518bb0e75d3619ca

  
Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server and SSH port to secure connection to my EC2 #required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC
  

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref MyVPC     #eklenecek

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: #required
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyApplicationLoadBalancer #required
      Port: 80
      Protocol: HTTP

  MyApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt MySecurityGroup.GroupId
      Subnets: !Ref MySubnets #eklenecek

  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        KeyName: !Ref MyKeyName #eklenecek
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        UserData: !Base64 |
            #!/bin/bash
            
            yum update -y
            yum install python3 -y
            pip3 install flask
            cd /home/ec2-user
            FOLDER="https://github.com/7181-Pablo/aws_devops/tree/main/aws/projects/Project-002-Milliseconds-Converter"
            wget $FOLDER/app.py
            wget -P templates $FOLDER/templates/index.html
            wget -P templates $FOLDER/templates/result.html
            python3 app.py

        SecurityGroupIds:
          - !Ref MySecurityGroup
        InstanceType: !Ref MyInstanceType


  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs
      DesiredCapacity: '2'
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate 
        Version: '1'
      MaxSize: '3' #required
      MinSize: '1' #required
      TargetGroupARNs:
        - !Ref MyTargetGroup


  CallCPUPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: !Ref MyAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 40.0

Outputs:
  WebsiteURL:
    Description: URL of Project-002 App
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt MyApplicationLoadBalancer.DNSName
